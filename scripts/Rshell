#!/bin/bash

set -o pipefail

RMODULE="ml purge && module load R/3.5.0-goolf-1.7.20"
RCMD="Rscript"
NAME="Rshell"
TMPDIR=${TEMPDIR} #use system $TEMPDIR on scicore (/scratch)
LOGDIR=.
MEM="1G"
TIME="00:29:59"
QOS="30min"
PARALLEL=1
QSUB="python usb-modules-v2/scripts/run.py"

while getopts "e:s:m:n:l:p:" opt; do
  case $opt in
    l)
    LOGDIR=$OPTARG
      ;;
    e)
    R=$OPTARG
      ;;
    m)
    MEM=$OPTARG
      ;;
    p)
    PARALLEL=$OPTARG
      ;;
    n)
    NAME=$OPTARG
      ;;
    s)
    SLURM=true
      ;;
    \:)
      echo "Argument missing: -$OPTARG" >&2
      exit -1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit -1
      ;;
  esac
	echo $MEM
done

echo "#---------------------------------";

if [[ $PARALLEL -gt 1 ]]; then
	PE="-n $PARALLEL"
fi

umask 002
mkdir -p $LOGDIR
echo "Here" >&2

if [[ -n "$R" ]]; then 
    TMP=$(mktemp --tmpdir=${TMPDIR})
    #TMP=$(mktemp -t x)
    trap "{ rm -f ${TMP}; exit 255;  }" SIGINT
    echo "Sys.umask('002')" > ${TMP}
    echo "${R}" >> ${TMP}
    echo "${R}" > $LOGDIR/$NAME.R
    chmod +rx ${TMP}
    if [[ -n "$SLURM" ]]; then
        mkdir -p $LOGDIR
#        echo "umask 002; ${RMODULE}; ${RCMD} ${TMP}" | $QSUB -- -cwd -V -now n -N X$NAME $PE -l runtime=$TIME,membycore=$MEM -o $LOGDIR/$NAME.log -j y -b n
	echo "umask 002; ${RMODULE}; ${RCMD} ${TMP}" | $QSUB --log_file $LOGDIR/$NAME.log $PE -m $MEM -c -p X$NAME -g SLURM --qos $QOS -w $TIME -o $LOGDIR/$NAME.out 
        RET_CODE=$?
    else
        $RMODULE ; $RCMD ${TMP} | tee -a $LOGDIR/$NAME.log
        RET_CODE=$?
    fi
    rm -f ${TMP}
    exit ${RET_CODE}
else
    echo "Undefined script" >&2
    exit -1
fi

